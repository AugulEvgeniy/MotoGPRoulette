name: Cypress Tests (Chrome Only)

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [main, master]

jobs:
  cypress-run:
    if: contains(github.event.pull_request.title, 'HMR')
    runs-on: ubuntu-24.04
    env:
      NODE_VERSION: 22
      CYPRESS_CACHE_FOLDER: ~/.cache/Cypress

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Init submodules
        run: git submodule update --init --recursive

      - name: Determine test folder from PR title
        id: test_folder
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          echo "PR Title: $PR_TITLE"
          TITLE_LOWER=$(echo "$PR_TITLE" | tr '[:upper:]' '[:lower:]')

          if [[ "$TITLE_LOWER" == *"HMR"* ]]; then
            echo "folder=cypress/e2e/MotoGPRoulette/Test" >> $GITHUB_OUTPUT
          elif [[ "$TITLE_LOWER" == *"features"* ]]; then
            echo "folder=cypress/e2e/MotoGPRoulette/Features" >> $GITHUB_OUTPUT
          elif [[ "$TITLE_LOWER" == *"spins"* ]]; then
            echo "folder=cypress/e2e/MotoGPRoulette/Spins" >> $GITHUB_OUTPUT
          elif [[ "$TITLE_LOWER" == *"stakes"* ]]; then
            echo "folder=cypress/e2e/MotoGPRoulette/Stakes" >> $GITHUB_OUTPUT
          else
            echo "folder=cypress/e2e" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache node_modules and .npm
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: |
            ~/.npm
            external/node_modules
          key: ${{ runner.os }}-node-modules-external

      - name: Install dependencies (if needed)
        if: steps.npm-cache.outputs.cache-hit != 'true'
        working-directory: external
        run: npm install

      - name: Install wait-on (ensure available)
        run: npm install --no-save wait-on

      - name: Cache Cypress binary
        uses: actions/cache@v4
        id: cypress-cache
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-cypress-external

      - name: Create reports directory
        run: mkdir -p external/reports/chrome

      - name: Start local server
        run: |
          npm run build:test
          npx serve -s dist -l 8000 &
        continue-on-error: false

      - name: Wait for local server to start
        run: npx wait-on http://localhost:8000

      - name: Check if server is up
        run: |
          curl -I http://localhost:8000 || (echo "Server not running!" && exit 1)

      - name: Show test folder and list test files
        working-directory: external
        run: |
          echo "Test folder is: ${{ steps.test_folder.outputs.folder }}"
          ls -l ${{ steps.test_folder.outputs.folder }}/**/*.cy.js || echo "No test files found"

      - name: Run Cypress tests in Chrome
        working-directory: external
        env:
          TERM: xterm
        run: |
          npx cypress run \
            --browser chrome \
            --spec "${{ steps.test_folder.outputs.folder }}/**/*.cy.js" \
            --reporter mochawesome \
            --reporter-options "reportDir=reports/chrome,overwrite=false,html=false,json=true" \
            --config video=true,chromeWebSecurity=false

      - name: List generated reports after Cypress run
        working-directory: external
        run: |
          ls -l reports/chrome || echo "No reports directory found"
          ls -l reports/chrome/*.json || echo "No JSON reports found"

      - name: Merge Mochawesome reports
        if: always()
        working-directory: external
        run: |
          npx mochawesome-merge reports/chrome/*.json > reports/chrome/merged-report.json

      - name: Generate HTML reports
        if: always()
        working-directory: external
        run: |
          npx marge reports/chrome/merged-report.json \
            --reportDir reports/chrome \
            --reportFilename chrome-report.html \
            --inline

      - name: Upload HTML Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: chrome-test-report
          path: external/reports/chrome/chrome-report.html

      - name: Upload Test Videos
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: chrome-test-videos
          path: external/cypress/videos