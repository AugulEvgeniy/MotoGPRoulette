{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2025-06-03T12:24:10.368Z",
    "end": "2025-06-03T12:24:37.065Z",
    "duration": 26697,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "02efcbf1-87b8-4507-8bab-aa043f66ed56",
      "title": "",
      "fullFile": "cypress\\e2e\\MotoGPRoulette\\Features\\2. multiply_std_and_raceTrack.cy.js",
      "file": "cypress\\e2e\\MotoGPRoulette\\Features\\2. multiply_std_and_raceTrack.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e2c8f4ed-92c0-4c1e-b3fe-139e9496a71a",
          "title": "multiply works correctly",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should multiply 0.50 stake",
              "fullTitle": "multiply works correctly should multiply 0.50 stake",
              "timedOut": null,
              "duration": 19279,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visitTestEnvironment();\ncy.interceptStartGame();\ncy.window({\n  timeout: 50000\n}).should(win => {\n  const game = win.game;\n  const scene = game.scene.scenes[1];\n  const start_button = scene.gameContainer.startGroupButtons.list[0].visible;\n  expect(start_button, 'Game is loaded').to.be.true;\n});\ncy.window({\n  timeout: 30000\n}).should(win => {\n  expect(win.game.scene.scenes[1].gameContainer.stakeSelector.active).to.be.true;\n});\ncy.wait(2000);\ncy.window().then(win => {\n  win.game.scene.scenes[1].gameContainer.stakeSelector.list[0].list[0].emit('pointerdown');\n});\ncy.wait(800);\ncy.window().then(win => {\n  win.game.scene.scenes[1].gameContainer.tapBar.multiplyButton.emit('pointerdown');\n});\ncy.window({\n  timeout: 25000\n}).should(win => {\n  const total_bet = win.game.scene.scenes[1].gameContainer.betPanel.list[9].text;\n  expect(total_bet).to.include('1.00');\n});\ncy.wait(2000);\ncy.window().then(win => {\n  win.game.scene.scenes[1].gameContainer.tapBar.multiplyButton.emit('pointerdown');\n});\ncy.window({\n  timeout: 25000\n}).should(win => {\n  const total_bet = win.game.scene.scenes[1].gameContainer.betPanel.list[9].text;\n  expect(total_bet).to.include('2.00');\n});\ncy.wait(2000);\ncy.window().then(win => {\n  win.game.scene.scenes[1].gameContainer.tapBar.multiplyButton.emit('pointerdown');\n});\ncy.window({\n  timeout: 25000\n}).should(win => {\n  const total_bet = win.game.scene.scenes[1].gameContainer.betPanel.list[9].text;\n  expect(total_bet).to.include('4.00');\n});",
              "err": {},
              "uuid": "5848a836-4816-499a-8990-c2daf0f6256a",
              "parentUUID": "e2c8f4ed-92c0-4c1e-b3fe-139e9496a71a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5848a836-4816-499a-8990-c2daf0f6256a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19279,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c33c7d6c-b351-455e-811c-59662d896ad9",
          "title": "Multiply works correctly in Race Track",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should multiply neighbours stake",
              "fullTitle": "Multiply works correctly in Race Track should multiply neighbours stake",
              "timedOut": null,
              "duration": 4973,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(500);\ncy.window().then(win => {\n  const game = win.game;\n  const scene = game.scene.scenes[1];\n  scene.gameContainer.tapBar.raceButton.emit('pointerdown');\n});\ncy.wait(100);\ncy.window({\n  timeout: 25000\n}).should(win => {\n  expect(win.game.scene.scenes[1].gameContainer.stakeSelector.isSwitching, 'Switched to RaceTable').to.be.false;\n});\ncy.window({\n  timeout: 25000\n}).should(win => {\n  expect(win.game.scene.scenes[1].gameContainer.stakeSelector.isRaceTable, 'Switched to RaceTable').to.be.true;\n});\ncy.wait(2000);\ncy.window().then(win => {\n  win.game.scene.scenes[1].gameContainer.stakeSelector.raceButtons[0].emit('pointerdown');\n});\ncy.wait(800);\ncy.window().then(win => {\n  win.game.scene.scenes[1].gameContainer.tapBar.multiplyButton.emit('pointerdown');\n});\ncy.window({\n  timeout: 25000\n}).should(win => {\n  const total_bet = win.game.scene.scenes[1].gameContainer.betPanel.list[9].text;\n  expect(total_bet).to.include('5.00');\n});\ncy.wait(1200);\ncy.window().then(win => {\n  win.game.scene.scenes[1].gameContainer.tapBar.multiplyButton.emit('pointerdown');\n});\ncy.window({\n  timeout: 25000\n}).should(win => {\n  const total_bet = win.game.scene.scenes[1].gameContainer.betPanel.list[9].text;\n  expect(total_bet).to.include('10.00');\n});\n// cy.wait(400)\ncy.window().then(win => {\n  win.game.scene.scenes[1].gameContainer.startGroupButtons.resetButton.emit('pointerdown');\n});",
              "err": {},
              "uuid": "7541da83-5b8f-44bf-94d0-7d5ef328d407",
              "parentUUID": "c33c7d6c-b351-455e-811c-59662d896ad9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7541da83-5b8f-44bf-94d0-7d5ef328d407"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4973,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/chrome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}