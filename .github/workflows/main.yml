name: Cypress Tests (Last Commit Message Trigger)

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [master]

jobs:
  cypress-run:
    runs-on: ubuntu-24.04
    env:
      NODE_VERSION: 22
      CYPRESS_CACHE_FOLDER: ~/.cache/Cypress

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Init submodules
        run: git submodule update --init --recursive

      - name: Get last commit message
        id: get-commit
        run: |
          LAST_COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "last_commit_message=$LAST_COMMIT_MSG" >> $GITHUB_OUTPUT
          echo "Last commit message: $LAST_COMMIT_MSG"

      - name: Check for brackets in last commit message
        id: check-commit
        run: |
          if echo "${{ steps.get-commit.outputs.last_commit_message }}" | grep -q "\[.*\]"; then
            echo "has_brackets=true" >> $GITHUB_OUTPUT
          else
            echo "has_brackets=false" >> $GITHUB_OUTPUT
            echo "No brackets found in last commit message"
          fi

      - name: Determine test specs from last commit message
        if: steps.check-commit.outputs.has_brackets == 'true'
        id: test_specs
        run: |
          MSG_LOWER=$(echo "${{ steps.get-commit.outputs.last_commit_message }}" | tr '[:upper:]' '[:lower:]')
          SPECS=""

          [[ "$MSG_LOWER" == *"[spins]"* ]] && SPECS+="cypress/e2e/MotoGPRoulette/Spins/Spins.cy.js,"
          [[ "$MSG_LOWER" == *"[features]"* ]] && SPECS+="cypress/e2e/MotoGPRoulette/Features/Features.cy.js,"
          [[ "$MSG_LOWER" == *"[bonus]"* ]] && SPECS+="cypress/e2e/MotoGPRoulette/Spins/bonus + autospin_stop_on_bonus_feature.cy.js,"
          [[ "$MSG_LOWER" == *"[bets]"* ]] && SPECS+="cypress/e2e/MotoGPRoulette/Stakes/inside_bets.cy.js,"
          [[ "$MSG_LOWER" == *"[bets]"* ]] && SPECS+="cypress/e2e/MotoGPRoulette/Stakes/outside_bets.cy.js,"
          [[ "$MSG_LOWER" == *"[bets]"* ]] && SPECS+="cypress/e2e/MotoGPRoulette/Stakes/race_sectors_bets.cy.js,"

          SPECS=${SPECS%,} # Remove trailing comma

          if [ -z "$SPECS" ]; then
            echo "No test specs matched."
            exit 1
          fi

          echo "specs=$SPECS" >> $GITHUB_OUTPUT
          echo "Matched test specs: $SPECS"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache node_modules and .npm
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: |
            ~/.npm
            external/node_modules
          key: ${{ runner.os }}-node-modules-external

      - name: Install dependencies (if needed)
        if: steps.npm-cache.outputs.cache-hit != 'true'
        working-directory: external
        run: npm install

      - name: Install wait-on
        run: npm install --no-save wait-on

      - name: Cache Cypress binary
        uses: actions/cache@v4
        id: cypress-cache
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-cypress-external

      - name: Create reports directory
        run: mkdir -p external/reports/chrome

      - name: Start local server
        run: |
          npm run build:test
          npx serve -s dist -l 8000 &
        continue-on-error: false

      - name: Wait for local server
        run: npx wait-on http://localhost:8000

      - name: Check if server is up
        run: |
          curl -I http://localhost:8000 || (echo "Server not running!" && exit 1)

      - name: Show test specs
        working-directory: external
        run: |
          echo "Test specs: ${{ steps.test_specs.outputs.specs }}"
          IFS=',' read -ra SPEC_ARRAY <<< "${{ steps.test_specs.outputs.specs }}"
          for spec in "${SPEC_ARRAY[@]}"; do
            ls -l "$spec" || echo "Test file not found: $spec"
          done

      - name: Run Cypress tests in Chrome
        if: steps.check-commit.outputs.has_brackets == 'true'
        working-directory: external
        env:
          TERM: xterm
        run: |
          IFS=',' read -ra SPEC_ARRAY <<< "${{ steps.test_specs.outputs.specs }}"
          for spec in "${SPEC_ARRAY[@]}"; do
            echo "Running test: $spec"
            npx cypress run \
              --browser chrome \
              --spec "$spec" \
              --reporter mochawesome \
              --reporter-options "reportDir=reports/chrome,overwrite=false,html=false,json=true" \
              --config video=true,chromeWebSecurity=false
          done

      - name: List generated reports
        working-directory: external
        run: |
          ls -l reports/chrome || echo "No reports directory found"
          ls -l reports/chrome/*.json || echo "No JSON reports found"

      - name: Merge Mochawesome reports
        if: always()
        working-directory: external
        run: |
          npx mochawesome-merge reports/chrome/*.json > reports/chrome/merged-report.json

      - name: Generate HTML reports
        if: always()
        working-directory: external
        run: |
          npx marge reports/chrome/merged-report.json \
            --reportDir reports/chrome \
            --reportFilename chrome-report.html \
            --inline

      - name: Upload HTML Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: chrome-test-report
          path: external/reports/chrome/chrome-report.html

      - name: Upload Test Videos
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: chrome-test-videos
          path: external/cypress/videos